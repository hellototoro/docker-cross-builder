# 轻量级ARM64交叉编译容器
# Lightweight ARM64 Cross-Compilation Container
FROM ubuntu:22.04

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV CROSS_COMPILE=aarch64-linux-gnu-
ENV ARCH=arm64

# 启用多架构支持
RUN dpkg --add-architecture arm64

# 复制源列表配置
COPY sources.list /etc/apt/sources.list

# 安装基础开发工具和ARM64工具链
RUN apt-get update && apt-get install -y \
    # 基础工具
    build-essential \
    wget \
    curl \
    git \
    cmake \
    ninja-build \
    pkg-config \
    # 交叉编译工具链
    gcc-aarch64-linux-gnu \
    g++-aarch64-linux-gnu \
    libc6-dev-arm64-cross \
    # 常用ARM64库
    libssl-dev:arm64 \
    zlib1g-dev:arm64 \
    libpng-dev:arm64 \
    libfreetype6-dev:arm64 \
    && rm -rf /var/lib/apt/lists/*

# ============================================================================
# 可选：从主机复制预编译的Qt或其他库
# ============================================================================
# 创建可选的挂载点目录
RUN mkdir -p /opt/arm64-libs \
    /opt/qt5-arm64 \
    /opt/qt6-arm64 \
    /opt/boost-arm64 \
    /opt/opencv-arm64 \
    /opt/custom-libs

# 如果主机有预编译的库，可以通过以下方式复制：
# COPY ./prebuilt-libs/qt5-arm64 /opt/qt5-arm64/
# COPY ./prebuilt-libs/boost-arm64 /opt/boost-arm64/
# COPY ./prebuilt-libs/opencv-arm64 /opt/opencv-arm64/

# 设置交叉编译环境变量
ENV CC=aarch64-linux-gnu-gcc \
    CXX=aarch64-linux-gnu-g++ \
    AR=aarch64-linux-gnu-ar \
    STRIP=aarch64-linux-gnu-strip \
    PKG_CONFIG_PATH="/usr/lib/aarch64-linux-gnu/pkgconfig"

# PKG_CONFIG配置
ENV PKG_CONFIG_PATH="/usr/lib/aarch64-linux-gnu/pkgconfig:/opt/arm64-libs/lib/pkgconfig:/opt/qt5-arm64/lib/pkgconfig:/opt/qt6-arm64/lib/pkgconfig"
ENV PKG_CONFIG_LIBDIR="/usr/lib/aarch64-linux-gnu/pkgconfig"

# CMAKE配置
ENV CMAKE_PREFIX_PATH="/usr/aarch64-linux-gnu:/opt/arm64-libs:/opt/qt5-arm64:/opt/qt6-arm64:/opt/boost-arm64:/opt/opencv-arm64"
ENV CMAKE_FIND_ROOT_PATH="/usr/aarch64-linux-gnu:/opt/arm64-libs"

# 创建工具链和脚本目录
RUN mkdir -p /usr/share/cmake/Toolchains

# 复制工具链文件和脚本
COPY arm64-toolchain.cmake /usr/share/cmake/Toolchains/arm64-toolchain.cmake
COPY build-universal.sh /usr/local/bin/build-universal.sh
COPY package-manager.sh /usr/local/bin/package-manager.sh

# 设置脚本执行权限
RUN chmod +x /usr/local/bin/build-universal.sh /usr/local/bin/package-manager.sh

# 创建工作目录
WORKDIR /workspace

# 显示欢迎信息
RUN echo 'echo "=== ARM64 Cross-Compilation Container ==="' >> ~/.bashrc && \
    echo 'echo "Toolchain: aarch64-linux-gnu"' >> ~/.bashrc && \
    echo 'echo "Build: build-universal.sh [project-path]"' >> ~/.bashrc && \
    echo 'echo "Packages: package-manager.sh [command]"' >> ~/.bashrc

CMD ["/bin/bash"]
